// <auto-generated />
using System;
using KOL2_APBD_S27523.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KOL2_APBD_S27523.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240614123031_p1")]
    partial class p1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Character", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PK");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pk"));

                    b.Property<int>("CurrentWeight")
                        .HasColumnType("int")
                        .HasColumnName("current_weig");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<int>("MaxWeight")
                        .HasColumnType("int")
                        .HasColumnName("max_weight");

                    b.Property<int>("Money")
                        .HasColumnType("int")
                        .HasColumnName("money");

                    b.HasKey("Pk");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Pk = 1,
                            CurrentWeight = 20,
                            FirstName = "Geralt",
                            LastName = "of Rivia",
                            MaxWeight = 100,
                            Money = 1000
                        },
                        new
                        {
                            Pk = 2,
                            CurrentWeight = 10,
                            FirstName = "Yennefer",
                            LastName = "of Vengerberg",
                            MaxWeight = 80,
                            Money = 500
                        });
                });

            modelBuilder.Entity("CharacterTitle", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int")
                        .HasColumnName("FK_charact")
                        .HasColumnOrder(1);

                    b.Property<int>("TitleId")
                        .HasColumnType("int")
                        .HasColumnName("FK_title")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("AcquiredAt")
                        .HasColumnType("datetime")
                        .HasColumnName("aquire_at");

                    b.HasKey("CharacterId", "TitleId");

                    b.HasIndex("TitleId");

                    b.ToTable("Character_Titles");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            TitleId = 1,
                            AcquiredAt = new DateTime(2024, 5, 15, 14, 30, 31, 718, DateTimeKind.Local).AddTicks(2030)
                        },
                        new
                        {
                            CharacterId = 2,
                            TitleId = 2,
                            AcquiredAt = new DateTime(2024, 5, 25, 14, 30, 31, 718, DateTimeKind.Local).AddTicks(2120)
                        });
                });

            modelBuilder.Entity("Item", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PK");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pk"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("Weight")
                        .HasColumnType("int")
                        .HasColumnName("weig");

                    b.HasKey("Pk");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Pk = 1,
                            Name = "Steel Sword",
                            Weight = 5
                        },
                        new
                        {
                            Pk = 2,
                            Name = "Silver Sword",
                            Weight = 6
                        },
                        new
                        {
                            Pk = 3,
                            Name = "Witcher Medallion",
                            Weight = 1
                        });
                });

            modelBuilder.Entity("KOL2_APBD_S27523.Models.Domain.BackpackSlot", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("int")
                        .HasColumnName("FK_character");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("FK_item");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("PK");

                    b.HasKey("CharacterId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("Backpack_Slots");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            ItemId = 1,
                            Id = 0
                        },
                        new
                        {
                            CharacterId = 1,
                            ItemId = 2,
                            Id = 0
                        },
                        new
                        {
                            CharacterId = 2,
                            ItemId = 3,
                            Id = 0
                        });
                });

            modelBuilder.Entity("Title", b =>
                {
                    b.Property<int>("Pk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PK");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pk"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nam");

                    b.HasKey("Pk");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Pk = 1,
                            Name = "Witcher"
                        },
                        new
                        {
                            Pk = 2,
                            Name = "Sorceress"
                        });
                });

            modelBuilder.Entity("CharacterTitle", b =>
                {
                    b.HasOne("Character", "Character")
                        .WithMany("CharacterTitles")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Title", "Title")
                        .WithMany("CharacterTitles")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("KOL2_APBD_S27523.Models.Domain.BackpackSlot", b =>
                {
                    b.HasOne("Character", "Character")
                        .WithMany("BackpackSlots")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Item", "Item")
                        .WithMany("BackpackSlots")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Character", b =>
                {
                    b.Navigation("BackpackSlots");

                    b.Navigation("CharacterTitles");
                });

            modelBuilder.Entity("Item", b =>
                {
                    b.Navigation("BackpackSlots");
                });

            modelBuilder.Entity("Title", b =>
                {
                    b.Navigation("CharacterTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
